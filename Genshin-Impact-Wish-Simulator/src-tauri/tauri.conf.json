name: Release Build

on:
  push:
    tags:
      - "v*"  # 当推送以 v 开头的标签时触发（例如 v1.0.0）

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        include:
          - os: windows-latest
            target: x86_64-pc-windows-msvc
          - os: macos-latest
            target: aarch64-apple-darwin
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # 获取完整的提交历史，用于生成 changelog

    - name: Install Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18

    - name: Install Rust (Tauri 依赖)
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true

    - name: Install Dependencies
      run: npm install

    - name: Build Frontend
      run: npm run build

    - name: Build Tauri App
      run: npm run tauri build -- --target ${{ matrix.target }}
      env:
        TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
        TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}

    - name: Generate Changelog
      id: changelog
      run: |
        # 生成从上一个 tag 到当前 tag 的提交日志
        git fetch --tags
        latest_tag=$(git describe --tags --abbrev=0)
        previous_tag=$(git describe --tags --abbrev=0 "$latest_tag^")
        changelog=$(git log --pretty=format:"- %s (%h)" "$previous_tag".."$latest_tag")
        echo "CHANGELOG<<EOF" >> $GITHUB_ENV
        echo "$changelog" >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        tag_name: ${{ github.ref }}
        name: Release ${{ github.ref_name }}
        body: |  # 使用生成的 changelog 作为 Release 描述
          ### 新特性
          - 添加了XXX功能

          ### 变更日志
          ${{ env.CHANGELOG }}
        files: |
          src-tauri/target/release/*.msi
          src-tauri/target/release/*.dmg
          src-tauri/target/release/*.AppImage
          src-tauri/target/release/*.deb
        draft: false  # 直接发布，非草稿模式
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}